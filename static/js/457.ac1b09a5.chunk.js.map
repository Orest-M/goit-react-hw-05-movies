{"version":3,"file":"static/js/457.ac1b09a5.chunk.js","mappings":"sPACA,EAAgC,+B,SC2DhC,EAtDgB,WACd,OAA0BA,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,MAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACRP,GAAS,GACTE,GAAa,GACb,IAAMM,EAAkB,IAAIC,gBAEtBC,EAAU,mCAAG,8GAEYC,EAAAA,EAAAA,IAAWN,EAASG,EAAgBI,QAFhD,OAETC,EAFS,OAGfT,EAAWS,GAHI,gDAKfb,GAAS,GALM,yBAOfE,GAAa,GAPE,4EAAH,qDAYhB,OADAQ,IACO,WACLF,EAAgBM,OACjB,CACF,GAAE,CAACT,IAEAJ,GACK,wCAGLF,GACK,oCAIP,yBAC+B,KAArB,OAAPI,QAAO,IAAPA,OAAA,EAAAA,EAASY,QAAQC,SAChB,qEAEA,eAAIC,UAAWC,EAAf,gBACGf,QADH,IACGA,OADH,EACGA,EAASY,QAAQI,KAAI,SAAAC,GAAM,OAC1B,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADU,OAUrC,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews__list\":\"Reviews_reviews__list__FL7NX\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/getMovies';\n\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [error, setError] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setError(false);\n    setIsloading(true);\n    const abortController = new AbortController();\n\n    const fetchMovie = async () => {\n      try {\n        const movieReviews = await getReviews(movieId, abortController.signal);\n        setReviews(movieReviews);\n      } catch {\n        setError(true);\n      } finally {\n        setIsloading(false);\n      }\n    };\n\n    fetchMovie();\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error</div>;\n  }\n\n  return (\n    <div>\n      {reviews?.results.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul className={css.reviews__list}>\n          {reviews?.results.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","error","setError","isLoading","setIsloading","reviews","setReviews","movieId","useParams","useEffect","abortController","AbortController","fetchMovie","getReviews","signal","movieReviews","abort","results","length","className","css","map","review","author","content","id"],"sourceRoot":""}